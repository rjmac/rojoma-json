Directional Path
  - abstract base class with methods toList and toListReversed
  - two subclasses, one of which builds headwards and one of which builds tailwards
     - when an opposite builder is chosen, switch subclass

NO EXCEPTIONS
  - except (heh) when implementing an API that doesn't allow Either (i.e., iterators)
  - But all errors should EXTEND Exception so they can be thrown if the user wants to!
     - maybe IOException?

Automatic JsonEncoders should return JObject, not JValue

A way to encode straight to a Writer without having a JValue intermediate

A way to encode a JValue to an OutputStream

A way to encode straight to a OutputStream without having a JValue intermediate

Allow interning string (and number?) values on read

kill FieldCodec (split the scala enum codec into a FieldEncode and a
FieldDecode like everything else)
  -- maybe.  I forget you need to provide the enum to the codec non-explicitly

Make JsonUtil encoders take a `trailingNewline` boolean (default true)

Decoders provide a "knownFieldNames" def (for populating a StaticFieldCache)

Encode-to-events, decode-from-events?

Remove top-level annotations in favor of parameters to Automatic*Builders
